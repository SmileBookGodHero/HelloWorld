package com.company.algorithm.ali.ali.demo02greedy;

/**
 * @author lilei
 * @date 2020-07-29 17:03
 * @apiNote 算法笔试模拟题精解之“相似数组”
 * 简介:要解出相似数组的最长长度，即要求相似数组中的每个元素尽可能的小，
 * 把握这一点，结合下来的算法过程理解一下。
 * 题目描述
 * 等级:中等
 * 知识点:贪心、尺取法
 * 现在有两个数组 a 和 b ，长度分别为 n 和 m。你可以对两者进行任意次数(包
 * 括零次)的下述操作:
 * 任选一段连续的区间 [l, r]，将其替换为这段区间的所有数字的和。比如，对于
 * [1, 3, 4, 5, 11, 9]，你可以选择区间 [3, 5]，并将其替换为 4+5+11=20，
 * 操作后的数组为 [1, 3, 20, 9]。
 * 你现在需要通过上述操作将两个数组变成相同的数组，相同的定义是:对于两个
 * 数组 a，b 必须长度相同，不妨设为 l，并且对于 1 <= i <= l，必有 a[i]=b[i]。
 * 如果这两个数组可以变成相同的数组，那么我们称这两个数组是相似数组，否则
 * 不是相似数组。我们并不在意操作的次数，我们只在意在这两个数组经过操作之后变
 * 成相同数组的时候最长的长度是多少，如果它们本来不相似请输出 -1。
 * 输入内容为四个部分，先两个数字 n、m(1 <= n, m <= 100000)，分别表示数
 * 组 a 和 b 的长度，再分别输入含有 n 个数字的数组 a 和含有 m 个数字的数组 b，其
 * 中 1 <= a[i], b[i] <= 1000000000。
 * 输出一个数字，表示最长的长度。
 * 示例 1
 * 输入:
 * 5
 * 4
 * [7,2,5, 11, 13] [9 ,16 ,6 ,7 ]
 * 输出:
 * 3
 */

public class Main11 {
    public static void main(String[] args) {
        int n = 5;
        int m = 4;
        int[] a = {7, 2, 5, 11, 13};
        int[] b = {9, 16, 6, 7};
        System.out.println(solution(n, m, a, b));
    }

    private static int solution(int n, int m, int[] a, int[] b) {
        return 0;
    }

}
